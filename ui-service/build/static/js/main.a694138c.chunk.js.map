{"version":3,"sources":["components/Layout/Layout.js","components/NewMovieForm/NewMovieForm.js","store/actions/movie.js","store/actions/actionTypes.js","components/Toolbar/MyToolbar.js","components/MyTable/MyTable.js","containers/MovieViewer/MovieViewer.js","App.js","serviceWorker.js","store/movieReducer.js","index.js"],"names":["layout","props","react_default","a","createElement","CssBaseline","Container","maxWidth","children","NewMovieForm","state","name","year","length","dname","dsurname","handleChange","e","value","target","_this","setState","Object","defineProperty","handleForm","preventDefault","newMovie","id","director","surname","close","add","_this2","this","Dialog","scroll","open","show","onClose","DialogTitle","DialogContent","DialogContentText","onSubmit","encType","TextField","required","label","margin","onChange","DialogActions","Button","onClick","color","variant","type","Component","createMovie","movie","MyToolbar","showForm","onButtonClick","prevState","AppBar","position","Toolbar","style","justifyContent","Select","backgroundColor","padding","borderColor","borderRadius","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderStyle","disableUnderline","searchType","event","changeTypeSearch","MenuItem","Input","setSearch","paddingLeft","fontSize","placeholder","IconButton","paddingTop","size","Search_default","marginLeft","borderWidth","Add_default","components_NewMovieForm_NewMovieForm","addMovie","connect","selected","dispatch","dataForm","FormData","append","fetch","API_BASE_URL","method","mode","headers","Headers","Access-Control-Allow-Origin","body","then","response","json","data","directorId","actions","word","myTable","Paper","square","Table","TableHead","TableRow","TableCell","align","Badge","badgeContent","count","TableSortLabel","sort","active","direction","TableBody","map","d","index","key","deleteMovie","Delete_default","component","scope","MovieViewer","isSearchFieldNotEmpty","search","searchMoviesByMovieName","movies","movieName","filter","toLowerCase","indexOf","searchMoviesByDirectorName","directorName","isTableAttributeClicked","sortMoviesByMovieLength","b","sortMoviesByMovieYear","initMovies","mv","moviesCount","searchKeyword","MyTable","setSort","removeMovie","theme","createMuiTheme","palette","primary","blue","secondary","main","amber","App","MuiThemeProvider","Layout","Toolbar_MyToolbar","containers_MovieViewer_MovieViewer","Boolean","window","location","hostname","match","initialState","movieReducer","arguments","undefined","action","objectSpread","toConsumableArray","splice","dir","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a694138c.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst layout = (props) => {\n    return (\n        <div>\n            <CssBaseline />\n            <Container maxWidth=\"md\">\n                {props.children}\n            </Container>\n        </div>\n    );\n    \n}\n\nexport default layout;","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowDropDownCircleTwoTone from '@material-ui/icons/ArrowDropDownCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Cancel from '@material-ui/icons/Cancel';\nimport List from '@material-ui/core/List';\n\n\nclass NewMovieForm extends Component {\n\n    state= {\n        name: \"\",\n        year: \"\",\n        length: \"\",\n        dname: \"\",\n        dsurname: \"\"\n    }\n\n    handleChange = (name, e) => {\n        let value = e.target.value;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleForm = (e) => {\n        e.preventDefault();\n        let newMovie = {\n            id: \"\",\n            name: this.state.name,\n            year: this.state.year,\n            length: this.state.length,\n            director: {\n                id: \"\",\n                name: this.state.dname,\n                surname: this.state.dsurname\n            }\n        }\n        this.props.close();\n        this.props.add(newMovie);\n    }\n\n\n    render () {\n        return (\n            <Dialog scroll=\"body\" maxWidth=\"xs\" open={this.props.show} onClose={this.props.close}>\n            <DialogTitle>Add a new movie</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Please fill this form.</DialogContentText>\n                    <form onSubmit={this.handleForm} encType=\"multipart/form-data\">\n                        <TextField\n                        required\n                        label=\"Name\"\n                        margin=\"normal\"\n                        name='name'\n                        onChange={(e) => this.handleChange('name', e)}\n                        />\n                        <br/>\n                        <TextField\n                        required\n                        label=\"Year\"\n                        margin=\"normal\"\n                        name='year'\n                        onChange={(e) => this.handleChange('year', e)}\n                        />\n                        <br/>\n                        <TextField\n                        required\n                        label=\"Length\"\n                        margin=\"normal\"\n                        name='length'\n                        onChange={(e) => this.handleChange('length', e)}\n                        />\n                        <br/>\n                        <TextField\n                        required\n                        label=\"Director's name\"\n                        margin=\"normal\"\n                        name='dname'\n                        onChange={(e) => this.handleChange('dname', e)}\n                        />\n                        <br/>\n                        <TextField\n                        required\n                        label=\"Director's surname\"\n                        margin=\"normal\"\n                        name='dsurname'\n                        onChange={(e) => this.handleChange('dsurname', e)}\n                        />\n                        <br/>\n                        <br/>\n                        <DialogActions>\n                            <Button onClick={this.props.close} color=\"primary\" variant=\"contained\" >Cancel</Button>\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\" >Add</Button>\n                        </DialogActions>\n                        </form>\n                </DialogContent>\n        </Dialog>\n\n        );  \n    }\n}\n\nexport default NewMovieForm;","import * as actionTypes from './actionTypes';\nimport { API_BASE_URL } from '../../costants/costants';\n\nexport const initMovies = (movies) => {\n    return {\n        type: actionTypes.INIT_MOVIES,\n        movies: movies\n    };\n}\n\nexport const getMovies = () => {\n    return dispatch => {\n        fetch(API_BASE_URL + \"movie/\", {\n            method: \"GET\",\n            mode: \"cors\",\n            headers: new Headers({\n                'Access-Control-Allow-Origin': '*'\n            })\n        })\n        .then( response => {\n            return response.json()\n        })\n        .then( data => {\n            dispatch(initMovies(data));\n        })\n\n\n    };\n}\n\nexport const addMovie = (movie) => {\n    return dispatch => {\n        let dataForm = new FormData();\n        dataForm.append(\"name\", movie.name);\n        dataForm.append(\"year\", movie.year);\n        dataForm.append(\"length\", movie.length);\n        dataForm.append(\"directorName\", movie.director.name);\n        dataForm.append(\"directorSurname\", movie.director.surname);\n        fetch(API_BASE_URL + \"movie/add\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: new Headers({\n                'Access-Control-Allow-Origin': '*'\n            }),\n            body: dataForm\n        })\n        .then( response => {\n            return response.json()\n        })\n        .then( data => {\n            movie.id = data.id;\n            movie.director.id = data.directorId;\n            dispatch(createMovie(movie));\n        })\n    };\n\n}\n\nexport const createMovie = (movie) => {\n    return {\n        type: actionTypes.ADD_MOVIE,\n        movie: movie\n    }\n}\n\nexport const removeMovie = (index) => {\n    return {\n        type: actionTypes.DELETE_MOVIE,\n        index: index\n    }\n}\n\nexport const deleteMovie = (id, index) => {\n    return dispatch => {\n        fetch(API_BASE_URL + \"movie/delete/?id=\" + id, {\n            method: \"DELETE\",\n            mode: \"cors\",\n            headers: new Headers({\n                'Access-Control-Allow-Origin': '*'\n            })\n        })\n        .then( response => {\n            dispatch(removeMovie(index));\n        })\n    }\n}\n\nexport const changeTypeSearch = (type) => {\n    return {\n        type: actionTypes.CHANGE_TYPE_SEARCH,\n        searchType: type\n    }\n}\n\nexport const setSearch = (word) => {\n    return {\n        type: actionTypes.SET_SEARCH,\n        word: word\n    }\n}\n\nexport const setSort = (active) => {\n    return {\n        type: actionTypes.SET_SORT,\n        active: active\n    }\n}\n","export const INIT_MOVIES = 'INIT_MOVIES';\nexport const ADD_MOVIE = 'ADD_MOVIE';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\nexport const CHANGE_TYPE_SEARCH = 'CHANGE_TYPE_SEARCH';\nexport const SET_SEARCH = 'SET_SEARCH';\nexport const SET_SORT = 'SET_SORT';","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport NewMovieForm from '../NewMovieForm/NewMovieForm';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/movie';\n\n\n\n  \n\nclass MyToolbar extends Component {\n\n    state={\n      showForm: false\n    }\n\n    onButtonClick = () => {\n      this.setState(prevState => ({\n          showForm: !prevState.showForm\n      }));\n  }\n\n\n    render() {\n      return (\n        \n          <AppBar position=\"static\" color=\"primary\">\n              <Toolbar style={{justifyContent: \"center\"}}>\n                  <Select style={{ backgroundColor: \"#ffca28\", padding: \"4px\", borderColor:\"white\", borderRadius: \"15px 0px 0px 15px\", borderLeftWidth: \"2px\", borderBottomWidth: \"2px\", borderTopWidth: \"2px\", borderRightWidth: \"1px\", borderStyle: \"solid\"}} disableUnderline value={this.props.searchType} variant=\"outlined\" onChange={event => this.props.changeTypeSearch(event.target.value)}>\n                      <MenuItem value=\"movie\">Movie</MenuItem>\n                      <MenuItem value=\"director\">Director</MenuItem>\n                  </Select>\n                  <Input onChange={(e) => this.props.setSearch(e.target.value)} style={{paddingLeft: \"4px\", color:\"white\", fontSize: 23, borderLeftWidth: \"0px\", borderTopWidth: \"2px\", borderBottomWidth: \"2px\", borderRightWidth: \"0px\", borderStyle: \"solid\"}} type=\"search\" disableUnderline placeholder={this.props.placeholder} />\n                  <div style={{borderRadius: \"0px 15px 15px 0px\", borderLeftWidth: \"0px\", borderTopWidth: \"2px\", borderBottomWidth: \"2px\", borderRightWidth: \"2px\", borderStyle: \"solid\"}}>\n                  <IconButton style={{paddingTop:\"2px\"}} size=\"small\" color=\"inherit\"> \n                    <SearchIcon fontSize=\"large\" />\n                  </IconButton>\n                  </div>\n                  <div style={{marginLeft: \"auto\"}}>\n                  <Button onClick={this.onButtonClick} style={{borderWidth: \"2px\", borderColor: \"white\", borderStyle: \"solid\"}} variant=\"contained\" color=\"secondary\" size=\"medium\">\n                    ADD MOVIE \n                    &nbsp;\n                    <AddIcon/>\n                  </Button>\n                  </div>\n                  <NewMovieForm add={this.props.addMovie} show={this.state.showForm} close={this.onButtonClick}/>\n              </Toolbar>\n          </AppBar>\n\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchType: state.movie.selected,\n    placeholder: state.movie.placeholder\n  \n  }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      addMovie: (movie) => dispatch(actions.addMovie(movie)),\n      changeTypeSearch: (type) => dispatch(actions.changeTypeSearch(type)),\n      setSearch: (word) => dispatch(actions.setSearch(word))\n      \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyToolbar);","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Badge from '@material-ui/core/Badge';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconst myTable = (props) => {\n    return (\n        <Paper square=\"true\"> \n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">\n                <Badge style={{marginLeft:\"24px\"}} badgeContent={props.count} color=\"primary\">\n                  <div></div>\n                </Badge>\n              </TableCell>\n              <TableCell align=\"justify\">Name</TableCell>\n              <TableCell align=\"justify\">\n                <TableSortLabel onClick={() => props.sort(\"length\")} active={props.active === \"length\"} direction={props.direction}>\n                  Length&nbsp;(minutes)\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"justify\">\n                <TableSortLabel onClick={() => props.sort(\"year\")} active={props.active === \"year\"} direction={props.direction}>\n                  Year\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"justify\">Director&nbsp;(name)</TableCell>\n              <TableCell align=\"justify\">Director&nbsp;(surname)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody >\n            {props.data.map( (d, index) => (\n              <TableRow key={d.id}>\n                <TableCell align=\"left\">\n                    <IconButton onClick={ () => props.deleteMovie(d.id, index)} color=\"primary\">\n                        <DeleteIcon/>\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" align=\"justify\">\n                  {d.name}\n                </TableCell>\n                <TableCell align=\"justify\">{d.length}</TableCell>\n                <TableCell align=\"justify\">{d.year}</TableCell>\n                <TableCell align=\"justify\">{d.director.name}</TableCell>\n                <TableCell align=\"justify\">{d.director.surname}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        </Paper>\n    );\n}\n\nexport default myTable;","import React, { Component } from 'react';\nimport * as actions from '../../store/actions/movie';\nimport { connect } from 'react-redux';\nimport MyTable from '../../components/MyTable/MyTable';\n\n\nclass MovieViewer extends Component {\n\n    componentDidMount() {\n        this.props.initMovies();\n    }\n\n    \n    render (){\n\n        let movies = this.props.mv;\n        let moviesCount = this.props.count;\n        if(this.isSearchFieldNotEmpty()) {\n            let searchKeyword = this.props.search.toLowerCase();\n\n            if(this.props.searchType === \"movie\") {\n                movies = this.searchMoviesByMovieName(movies, searchKeyword);\n            }\n            else {\n                movies = this.searchMoviesByDirectorName(movies, searchKeyword);\n                moviesCount = movies.length\n                \n            }\n        }\n        if(this.isTableAttributeClicked()) {\n            let tableAttributeClicked = this.props.active;\n\n            if(tableAttributeClicked === \"length\"){\n                movies = this.sortMoviesByMovieLength(movies);\n            }\n            else {\n                movies = this.sortMoviesByMovieYear(movies);\n            }\n        }\n        return (\n            <div>\n                <MyTable sort={this.props.setSort} active={this.props.active} direction={this.props.direction} data={movies} deleteMovie={this.props.deleteMovie} count={moviesCount}/>\n            </div>\n        );\n    }\n\n    isSearchFieldNotEmpty = () => {\n        return this.props.search != \"\";\n    }\n\n    searchMoviesByMovieName = (movies, movieName)  => {\n        movies = movies.filter( movie => {\n            let lowerCaseMovieName = movie.name.toLowerCase();\n            return lowerCaseMovieName.indexOf(movieName) !== -1;\n        })\n        return movies;\n    }\n\n    searchMoviesByDirectorName = (movies, directorName) => {\n        movies = movies.filter( movie => {\n            let lowerCaseDirectorSurname = movie.director.surname.toLowerCase();\n            return lowerCaseDirectorSurname.indexOf(directorName) !== -1;\n        })\n        return movies;\n    }\n\n    isTableAttributeClicked = () => {\n        return this.props.active !== \"\";\n    }\n\n    sortMoviesByMovieLength = (movies) => {\n        if(this.props.direction === \"asc\") {\n            movies.sort((a, b) => {\n                return a.length - b.length\n            })\n            return movies;\n        }\n        else {\n            movies.sort((a, b) => {\n                return b.length - a.length\n            })\n            return movies;\n        }\n    }\n\n    sortMoviesByMovieYear = (movies) => {\n        if(this.props.direction === \"asc\") {\n            movies.sort((a, b) => {\n                return a.year- b.year\n            })\n            return movies;\n        }\n        else {\n            movies.sort((a, b) => {\n                return b.year - a.year\n            })\n            return movies;\n        }\n    }\n}\n\n//retrieve movies data from the redux store\nconst mapStateToProps = state => {\n    return {\n        mv: state.movie.movies,\n        count: state.movie.count,\n        search: state.movie.search,\n        searchType: state.movie.selected,\n        active: state.movie.sort.active,\n        direction: state.movie.sort.direction\n    \n    }\n};\n\n// functions that operate on movies\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        initMovies: () => dispatch(actions.getMovies()),\n        deleteMovie: (id, index) => dispatch(actions.deleteMovie(id, index)),\n        setSort: (active) => dispatch(actions.setSort(active))\n        \n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieViewer);","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport MyToolbar from './components/Toolbar/MyToolbar';\nimport { MuiThemeProvider, createMuiTheme} from '@material-ui/core';\nimport blue from '@material-ui/core/colors/blue';\nimport { amber } from '@material-ui/core/colors';\nimport MovieViewer from './containers/MovieViewer/MovieViewer';\n\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: blue,\n      secondary: {\n        main: amber[400],\n      }\n  },\n})\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n    <Layout>\n      <MyToolbar/>\n      <MovieViewer/>\n    </Layout>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions/actionTypes';\n\n\n\n\n\nconst initialState = {\n    movies: [],\n    count: null,\n    search: \"\",\n    selected: \"movie\",\n    placeholder: \"Search Movies\",\n    sort: {\n        active: \"\",\n        direction: \"asc\"\n    }\n};\n\nconst initMovies = (state, action) => {\n    return {\n        ...state,\n        movies: action.movies,\n        count: action.movies.length\n    }\n\n}\n\nconst addMovie = (state, action) => {\n    let movies = [...state.movies];\n    movies.splice(0,0, action.movie)\n    return {\n        ...state,\n        movies: movies,\n        count: state.count + 1\n    }\n\n}\n\nconst deleteMovie = (state, action) => {\n    let movies = [...state.movies];\n    movies.splice(action.index, 1);\n    return {\n        ...state,\n        movies: movies,\n        count: state.count -1\n    }\n}\n\nconst changeTypeSearch = (state, action) => {\n    let placeholder = \"\";\n    if(action.searchType === \"movie\") placeholder = \"Search Movies\";\n    else placeholder = \"Search Directors\"\n    return {\n        ...state,\n        selected: action.searchType,\n        placeholder: placeholder\n\n    }\n}\n\nconst setSearch = (state, action) => {\n    return {\n        ...state,\n        search: action.word\n    }\n}\n\nconst setSort = (state, action) => {\n    let dir = state.sort.direction;\n    if(state.sort.active !== \"\") {\n        if(state.sort.direction === \"asc\") dir = \"desc\";\n        else dir = \"asc\";\n    }\n    return {\n        ...state,\n        sort: {\n            active: action.active,\n            direction: dir\n        }\n\n    }\n}\n\nconst movieReducer = (state=initialState, action) => {\n    switch( action.type) {\n        case(actionTypes.INIT_MOVIES) : return initMovies(state, action);\n        case(actionTypes.ADD_MOVIE) : return addMovie(state, action);\n        case(actionTypes.DELETE_MOVIE) : return deleteMovie(state, action);\n        case(actionTypes.CHANGE_TYPE_SEARCH) : return changeTypeSearch(state, action);\n        case(actionTypes.SET_SEARCH) : return setSearch(state, action);\n        case(actionTypes.SET_SORT) : return setSort(state, action);\n        default: return state;\n    }\n}\n\nexport default movieReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport movieReducer from './store/movieReducer';\n\nconst rootReducer = combineReducers({\n    movie: movieReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//inizializzo lo store usato con react redux\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}